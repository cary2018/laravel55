<?php/** * Created by PhpStorm. * User: asusa * Date: 2018/6/1/0001 * Author: Cary.He * Contact QQ  : 373889161($S$-Memory) * email: 373889161@qq.com * Time: 14:29 */namespace App\Http\Controllers\Admin;use App\Http\Controllers\Controller;use App\Http\Model\Admin_role;use App\Http\Model\Admin_user;use App\Http\Model\Jurisdiction;use App\Http\Model\Role_access;class BaseController extends Controller{    public $access = [];    public $ignore_url = [        'admin/Error',        'admin',        'admin/login',    ];    public function __construct()    {        $this->middleware(function ($request, $next) {            $urls = \Request::path();   //获取路由     格式：admin/navs            $n_urls = preg_replace("|[0-9]|",'',$urls);  //清空数字，匹配编辑页面权限            $access = $this->checkuser($n_urls);            if($access){                //return redirect('admin/Error');                //var_dump($access);            }else{                //var_dump($access);                return redirect('admin/Error');            }            return $next($request);        });    }    public function checkuser($action)    {        $id = session('user')->id;        /**         * 取出与用相关的角色id         */        $user = Admin_role::where('uid',$id)->get(['role_id']);        $arr_id = [];        if($user)        {            foreach($user as $v)            {                $arr_id[] = $v->role_id;            }            $role = Role_access::whereIn('role_id',$arr_id)->get(['access_id']);            /**             * 取出与角色相关的权限id             */            $role_id = [];            if($role)            {                foreach($role as $v)                {                    $role_id[] = $v->access_id;                }                /**                 * 取出所有关联权限链接                 */                $jurisdiction = Jurisdiction::wherein('id',$role_id)                    ->where(function ($q){                        $q->where('status',1);                    })->get(['urls']);                if($jurisdiction)                {                    foreach($jurisdiction as $v)                    {                        $urls = json_decode(str_replace('\r','',$v->urls),true);                        $this->access = array_merge($this->access,$urls);                    }                }            }        }        $admin = Admin_user::where('id',$id)            ->where(function($q){                $q->where('is_admin',1);            })->first();        if($admin)        {            return true;        }else{            if(in_array($action,$this->ignore_url))            {                return true;            }else{                if(in_array($action,$this->access))                {                    return true;                }else{                    return false;                }            }        }    }    public function ssid()    {        var_dump(session('user')->user_name);    }}