<?php/** * Created by PhpStorm. * User: asusa * Date: 2018/6/12/0012 * Author: Cary.He * Contact QQ  : 373889161($S$-Memory) * email: 373889161@qq.com * Time: 14:27 */namespace App\Http\Controllers\Admin;use App\Http\Model\Jurisdiction;use App\Http\Model\Role;use App\Http\Model\Role_access;use Illuminate\Support\Facades\Input;use Illuminate\Support\Facades\Validator;class RoleController extends BaseController{    public function index()    {        $data = Role::orderBy('id','desc')->paginate(10);        return view('admin.role.index',compact('data'));    }    public function create()    {        $jurisdiction = Jurisdiction::all();        return view('admin.role.add',compact('jurisdiction'));    }    /**     * 执行添加操作     */    public function store()    {        $input = Input::except('_token');        $data['name'] = $input['name'];        if(array_key_exists('status',$input)){            $data['status'] = $input['status'];        }else{            $data['status'] = [];        }        $data['update_time'] = time();        $data['created_time'] = time();        $rules = [            'name' => 'required',        ];        $messages = [            'name.required'=>'角色名称不能为空！',        ];        $validator = Validator::make($input,$rules,$messages);        if($validator->passes())        {            $role = Role::create($data);            $rid = $role->id;            if(array_key_exists('access_id',$input)){                $acc['access_id'] = $input['access_id'];            }else{                $acc['access_id'] = [];            }            if($acc){                foreach($acc['access_id'] as $acc_id)                {                    $acc['role_id'] = $rid;                    $acc['access_id'] = $acc_id;                    $acc['created_time'] = time();                    Role_access::create($acc);                }            }else{                dd('不存在！');            }            return redirect('admin/role');        }else{            return back()->withErrors($validator);        }    }    /**     * @param $id     * @return \Illuminate\Contracts\View\Factory|\Illuminate\View\View     * 编辑操作     */    public function edit($id)    {        $field = Role::find($id);        $jurisdiction = Jurisdiction::all();        $role_id = Role_access::where('role_id',$id)->get();        $roles = $role_id->toArray();        $arr_id = [];        foreach($roles as $v)        {            $arr_id[]= $v['access_id'];        }        return view('admin.role.edit',compact('field','jurisdiction','arr_id'));    }    /**     * @param $id     * @return $this|\Illuminate\Http\RedirectResponse|\Illuminate\Routing\Redirector     * @throws \Exception     * 执行更新操作     */    public function update($id)    {        $input = Input::except('_token','_method');        $input = array_filter($input);        $data['name'] = $input['name'];        if(array_key_exists('status',$input)){            $data['status'] = $input['status'];        }else{            $data['status'] = 0;        }        $data['update_time'] = time();        $rules = [            'name' => 'required',        ];        $messages = [            'name.required'=>'角色名称不能为空！',        ];        /**         * 删除角色权限         */        if(array_key_exists('access_id',$input)){            $role['access_id'] = $input['access_id'];        }else{            $role['access_id'] = [];        }        $user_role = Role_access::where('role_id',$id)->get();        $roleid = [];        if($user_role)        {            foreach($user_role as $item)            {                $roleid[] = $item->access_id;                if (!in_array($item->access_id,$role['access_id']))                {                    $item_id = $item->access_id;                    Role_access::where('role_id',$id)                        ->where(function($q) use($item_id){                            $q->where('access_id',$item_id);                        })->delete();                }            }        }        //dd($user_role);        /**         * 添加权限角色         */        if($role){            foreach($role['access_id'] as $role_id)            {                if(!in_array($role_id,$roleid))                {                    $role['role_id'] = $id;                    $role['access_id'] = $role_id;                    $role['created_time'] = time();                    Role_access::create($role);                }            }        }else{            dd('不存在！');        }        $validator = Validator::make($input,$rules,$messages);        if($validator->passes()){            $re = Role::where('id',$id)->update($data);            if ($re) {                return redirect('admin/role');            } else {                return back()->with('errors', '数据未发生变化！！');            }        }else{            return back()->withErrors($validator);        }    }    /**     * @param $id     * @return array     * @throws \Exception     * 删除操作     */    public function destroy($id)    {        $re = Role::where('id',$id)->delete();        if ($re)        {            Role_access::where('role_id',$id)->delete();            $data = [                'status'=>0,                'msg'=>'删除成功！'            ];        }else{            $data = [                'status'=>1,                'msg'=>'删除失败，请稍后再试！'            ];        }        return $data;    }    public function changeRole()    {        $input = Input::except('_token');        $nav = Role::find($input['id']);        if($input['status']==0)        {            $nav->status = 1;        }else{            $nav->status = 0;        }        $re = $nav->update();        if($re)        {            $data = Role::find($input['id'],['id','status']);            $result = [                'status'=>$data->status,                'msg' => '状态更新成功！'            ];        }else{            $result = [                'status'=>$data->status,                'msg' => '状态更新失败！'            ];        }        return $result;    }}