<?php/** * Created by PhpStorm. * User: asusa * Date: 2018/4/11/0011 * Author: Cary.He * Contact QQ  : 373889161($S$-Memory) * email: 373889161@qq.com * Time: 15:54 */namespace App\Http\Controllers\Admin;use App\Http\core\Images;use App\Http\Model\Article;use App\Http\Model\Category;use Illuminate\Support\Facades\Input;use Illuminate\Support\Facades\Validator;class ArticleController extends BaseController{    /**     * @return $this     * 分类列表     */    public function index()    {        $cate_id = Input::get('cate_id');        $data = Article::leftJoin('category', 'article.cate_id', '=', 'category.cate_id')            ->where(function ($query) use ($cate_id) {                if($cate_id){                    $query->where('article.cate_id','=',$cate_id);                }                if(session('user')->is_admin != 1)                {                    $query->where('article.user_id','=',session('user')->id);                }            })            ->orderBy('art_add_time', 'desc')            ->paginate(10);        $count = Article::where(function ($query) use ($cate_id) {                if ($cate_id) {                    $query->where('article.cate_id', '=', $cate_id);                }                if (session('user')->is_admin != 1) {                    $query->where('article.user_id', '=', session('user')->id);                }            })            ->count();        $categorys = Category::all();        $cate = (new Category())->getTree($categorys,'cate_name','cate_pid');        $cate = (new Category())->array_one($cate);        return view('admin.article.index',compact('data','count','cate'));    }    /**     * @return $this     * 添加文章栏目页面     */    public function create()    {        $categorys = Category::all();        $data = (new Category())->getTree($categorys,'cate_name','cate_pid');        $data = (new Category())->array_one($data);        return view('admin.article.add')->with('data',$data);    }    /**     * @return $this|\Illuminate\Http\RedirectResponse|\Illuminate\Routing\Redirector     * 执行添加文章栏目操作     */    public function store()    {        $input = Input::except('_token');        $input['art_add_time'] = time();        $input['art_uptime'] = time();        $input['user_id'] = session('user')->id;        $rules = [            'art_title' => 'required',            'art_content' => 'required',        ];        $messages = [            'art_title.required'=>'标题不能为空！',            'art_content.required'=>'内容不能为空！',        ];        $validator = Validator::make($input,$rules,$messages);        if($validator->passes()){            $file = new Images();            $img = $file->upload('art_thumb',300,300);            if ($img){                $input['art_img'] =  '/'.$img['b_img'];                $input['art_thumb'] =  '/'.$img['s_img'];            }            $input = array_filter($input);  //去除空数组            $re = Article::create($input);            if ($re)            {                return redirect('admin/article');            }else{                return back()->with('errors', '添加失败，请重新添加！');            }        }else{            return back()->withErrors($validator);        }    }    /**     * @param $id     * @return \Illuminate\Contracts\View\Factory|\Illuminate\View\View     * 编辑文章栏目信息     */    public function edit($id)    {        $categorys = Category::all();        $data = (new Category())->getTree($categorys,'cate_name','cate_pid');        $data = (new Category())->array_one($data);        $field = Article::where(function($q)use($id){            if($id){                $q->where('art_id','=',$id);            }            if (session('user')->is_admin != 1){                $q->where('user_id','=',session('user')->id);            }        })->first();        if(!$field){            return redirect('admin/article');        }else{            return view('admin.article.edit',compact('field','data'));        }            }    /**     * @param $id     * @return \Illuminate\Http\RedirectResponse|\Illuminate\Routing\Redirector     * 提交更新文章     */    public function update($id)    {        $input = Input::except('_token','_method');        $input['art_uptime'] = time();        $input['user_id'] = session('user')->id;        $file = new Images();        $img = $file->upload('art_thumb',300,300);        $un_img = Article::where(function($q)use($id){            if($id){                $q->where('art_id','=',$id);            }            if (session('user')->is_admin != 1){                $q->where('user_id','=',session('user')->id);            }        })->first();        if(!$un_img){            return redirect('admin/article');        }        if ($img) {            $input['art_img'] = '/'.$img['b_img'];            $input['art_thumb'] = '/'.$img['s_img'];            @unlink( public_path().$un_img->art_img);            @unlink( public_path().$un_img->art_thumb);        } else {            $input['art_thumb'] = $input['ol_art_thumb'];        }        $input = array_filter($input);        unset($input['ol_art_thumb']);        $re = Article::where('art_id',$id)->update($input);        if ($re) {            return redirect('admin/article');        } else {            return back()->with('errors', '数据未发生变化！！');        }    }    /**     * @param $art_id     * @return array     * @throws \Exception     * 删除文章     */    public function destroy($art_id)    {        $un_img = Article::find($art_id);        $re = Article::where(function ($q) use ($art_id){            if($art_id){               $q->where('art_id','=',$art_id);            }            if (session('user')->is_admin != 1) {               $q->where('user_id','=',session('user')->id);            }        })->delete();        if ($re)        {            @unlink( public_path().$un_img->art_img);            @unlink( public_path().$un_img->art_thumb);            $data = [                'status'=>0,                'msg'=>'文章删除成功！'            ];        }else{            $data = [                'status'=>1,                'msg'=>'文章删除失败，请稍后再试！'            ];        }        return $data;    }}